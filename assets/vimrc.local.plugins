let g:deoplete#sources#rust#racer_binary=systemlist('which racer')[0]
let g:deoplete#sources#rust#rust_source_path=systemlist('echo $HOME/workspace/rust/src')[0]

Plug 'godoctor/godoctor.vim'
Plug 'vmchale/dhall-vim'
Plug 'ships/copilot.vim', { 'branch': 'develop' }
Plug '~/workspace/cgpt.nvim'
Plug 'niklasl/vim-rdf', { 'do': 'pip3 install rdflib'}
Plug 'madox2/vim-ai'

let complete_engine_config = {
\  "engine": "complete",
\  "options": {
\    "model": "text-davinci-003",
\    "max_tokens": 0,
\    "temperature": 0.8,
\    "request_timeout": 20,
\    "selection_boundary": "#####",
\  },
\  "ui": {
\    "paste_mode": 1,
\  },
\}


let g:vim_ai_edit = complete_engine_config
let g:vim_ai_complete = complete_engine_config
" let g:vim_ai_edit['options']['model'] = 'code-davinci-edit-001'
let s:initial_chat_prompt =<< trim END

>>> system

You are a general assistant to a highly experienced software engineer with a scientific background.
If you attach a code block, please add the syntax type after ``` to enable syntax highlighting.
END

let g:vim_ai_chat = {
\  "options": {
\    "model": "gpt-3.5-turbo",
\    "max_tokens": 0,
\    "temperature": 0.7,
\    "request_timeout": 20,
\    "selection_boundary": "",
\    "initial_prompt": s:initial_chat_prompt,
\  },
\  "ui": {
\    "code_syntax_enabled": 1,
\    "open_chat_command": "preset_right",
\    "paste_mode": 1,
\  },
\}

" complete text on current line or in selection
nnoremap <C-h> :AI<CR>
vnoremap <C-h> :AI<CR>
" trigger chat
nnoremap <C-t> :AIChat<CR>
vnoremap <C-t> :AIChat<CR>

" redo last AI command
nnoremap <leader>r :AIRedo<CR>

" Github Copilot settings
" disable autocomplete suggestions
" (allows manual request)
let g:copilot_enabled = 0

" map Ctrl+Backslash to copilot in insert mode too
imap <C-\> <Plug>(copilot-suggest)

autocmd FileType turtle setlocal commentstring=#\ %s
